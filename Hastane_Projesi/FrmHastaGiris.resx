<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>